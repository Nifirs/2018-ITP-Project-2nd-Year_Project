/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import project_distributers.DBConnection;

/**
 *
 * @author Nilfa.RS
 */
public class viewAwardList extends javax.swing.JFrame {
    
    Connection con=null;
    PreparedStatement pst=null;
    ResultSet rs=null;
    
    /**
     * Creates new form viewAwardList
     */
    public viewAwardList() {
        initComponents();
        
                        con=DBConnection.connect();
                        update_table();
    }

    
     private void update_table(){
    
        try{
            String sql="select*from award_employee";
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery(sql);
            award_table.setModel(DbUtils.resultSetToTableModel(rs));
            
        }
        catch(Exception e){
         
        JOptionPane.showMessageDialog(null,e);
        
        }
    
    
    
    
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButton14 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        curryear = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        appyear = new javax.swing.JTextField();
        delete = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        update = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        empid = new javax.swing.JLabel();
        syears = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        award_table = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        maxi = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("View Award List");
        setMinimumSize(new java.awt.Dimension(1380, 772));
        setResizable(false);
        getContentPane().setLayout(null);

        jToolBar1.setBackground(new java.awt.Color(102, 102, 102));
        jToolBar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToolBar1.setRollover(true);
        jToolBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jButton14.setBackground(new java.awt.Color(51, 0, 0));
        jButton14.setForeground(new java.awt.Color(51, 0, 51));
        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.png"))); // NOI18N
        jButton14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton14.setFocusable(false);
        jButton14.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton14.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton14);

        jButton16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/home_blue.png"))); // NOI18N
        jButton16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton16.setFocusable(false);
        jButton16.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton16.setOpaque(false);
        jButton16.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton16);

        getContentPane().add(jToolBar1);
        jToolBar1.setBounds(10, 190, 480, 70);

        curryear.setBackground(new java.awt.Color(204, 204, 255));
        curryear.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        curryear.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        curryear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                curryearActionPerformed(evt);
            }
        });
        getContentPane().add(curryear);
        curryear.setBounds(260, 490, 220, 40);

        jLabel15.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Appointed Year");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(20, 420, 150, 23);

        jLabel21.setBackground(new java.awt.Color(0, 0, 102));
        jLabel21.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("           L U C K Y L A N D");
        jLabel21.setOpaque(true);
        getContentPane().add(jLabel21);
        jLabel21.setBounds(60, 40, 300, 60);

        jLabel12.setBackground(new java.awt.Color(0, 0, 102));
        jLabel12.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("B I S C U I T  M A N U F A C T U R E R S");
        jLabel12.setOpaque(true);
        getContentPane().add(jLabel12);
        jLabel12.setBounds(110, 100, 270, 40);

        jLabel11.setBackground(new java.awt.Color(0, 0, 102));
        jLabel11.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jLabel11.setOpaque(true);
        getContentPane().add(jLabel11);
        jLabel11.setBounds(10, 20, 480, 160);

        appyear.setBackground(new java.awt.Color(204, 204, 255));
        appyear.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        appyear.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(appyear);
        appyear.setBounds(260, 420, 220, 40);

        delete.setBackground(new java.awt.Color(153, 153, 153));
        delete.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cross.png"))); // NOI18N
        delete.setText("DELETE");
        delete.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        getContentPane().add(delete);
        delete.setBounds(380, 640, 100, 50);

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Employee ID");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(20, 360, 160, 30);

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("No of Service Years");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(20, 570, 190, 23);

        update.setBackground(new java.awt.Color(153, 153, 153));
        update.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/h.png"))); // NOI18N
        update.setText("UPDATE");
        update.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        getContentPane().add(update);
        update.setBounds(260, 640, 100, 50);

        jLabel17.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Current Year");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(20, 500, 120, 23);

        empid.setBackground(new java.awt.Color(204, 204, 255));
        empid.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        empid.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        empid.setOpaque(true);
        getContentPane().add(empid);
        empid.setBounds(260, 360, 220, 40);

        syears.setBackground(new java.awt.Color(204, 204, 255));
        syears.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        syears.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        syears.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                syearsActionPerformed(evt);
            }
        });
        getContentPane().add(syears);
        syears.setBounds(260, 560, 220, 40);

        jButton4.setBackground(new java.awt.Color(255, 51, 255));
        jButton4.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/a.png"))); // NOI18N
        jButton4.setText("Generate Report");
        jButton4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(20, 640, 230, 50);

        jLabel3.setBackground(new java.awt.Color(0, 0, 102));
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 290, 480, 430);

        jLabel10.setBackground(new java.awt.Color(153, 153, 153));
        jLabel10.setOpaque(true);
        getContentPane().add(jLabel10);
        jLabel10.setBounds(0, 0, 500, 790);

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel5.setText("                  View Award Applications");
        jLabel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel5.setOpaque(true);
        getContentPane().add(jLabel5);
        jLabel5.setBounds(770, 20, 390, 30);

        award_table.setBackground(new java.awt.Color(204, 255, 204));
        award_table.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        award_table.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        award_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        award_table.setSelectionBackground(new java.awt.Color(0, 0, 102));
        award_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                award_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(award_table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(520, 60, 830, 230);

        jLabel8.setBackground(new java.awt.Color(0, 0, 0));
        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("                                       WHO HAS THE MAXIMUM NUMBER OF SERVICE YEARS");
        jLabel8.setOpaque(true);
        getContentPane().add(jLabel8);
        jLabel8.setBounds(620, 550, 650, 30);

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel9.setText(" Maximum Service Years");
        jLabel9.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jLabel9.setOpaque(true);
        getContentPane().add(jLabel9);
        jLabel9.setBounds(630, 650, 180, 40);

        name.setBackground(new java.awt.Color(255, 255, 255));
        name.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        name.setOpaque(true);
        getContentPane().add(name);
        name.setBounds(890, 650, 150, 40);

        jLabel16.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel16.setText("     EMPLOYEE NAME");
        jLabel16.setOpaque(true);
        getContentPane().add(jLabel16);
        jLabel16.setBounds(890, 610, 150, 30);

        jLabel18.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel18.setText("   COUNT");
        jLabel18.setOpaque(true);
        getContentPane().add(jLabel18);
        jLabel18.setBounds(1050, 609, 70, 30);

        jButton1.setBackground(new java.awt.Color(255, 102, 255));
        jButton1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jButton1.setText("Find the Winner");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(1130, 650, 130, 40);

        maxi.setBackground(new java.awt.Color(255, 255, 255));
        maxi.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        maxi.setOpaque(true);
        getContentPane().add(maxi);
        maxi.setBounds(1050, 650, 70, 40);

        jLabel13.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel13.setText("     ID");
        jLabel13.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jLabel13.setOpaque(true);
        getContentPane().add(jLabel13);
        jLabel13.setBounds(820, 610, 60, 30);

        id.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        id.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        getContentPane().add(id);
        id.setBounds(820, 650, 60, 40);

        jLabel19.setBackground(new java.awt.Color(153, 153, 153));
        jLabel19.setOpaque(true);
        getContentPane().add(jLabel19);
        jLabel19.setBounds(620, 580, 650, 130);

        jLabel7.setBackground(new java.awt.Color(153, 153, 255));
        jLabel7.setOpaque(true);
        getContentPane().add(jLabel7);
        jLabel7.setBounds(520, 540, 830, 190);

        jTabbedPane1.setBackground(new java.awt.Color(102, 102, 102));
        jTabbedPane1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTabbedPane1.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jTabbedPane1.setOpaque(true);

        jButton2.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton2.setText("Bar Chart");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jTabbedPane1.addTab("Bar Chart", jButton2);

        jButton3.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton3.setText("Pie Chart");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jTabbedPane1.addTab("Pie Chart", jButton3);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(620, 310, 650, 210);

        jLabel1.setBackground(new java.awt.Color(204, 204, 255));
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(510, 30, 850, 710);

        jLabel2.setBackground(new java.awt.Color(0, 0, 102));
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, -10, 1440, 800);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed

        employeeAward ea=new employeeAward();
        ea.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed

        MainHomeUI mh=new MainHomeUI();
        mh.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton16ActionPerformed

    private void curryearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_curryearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_curryearActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed

         String val1=empid.getText();
            
            if(val1.isEmpty())
            {
                        JOptionPane.showMessageDialog(null,"Employee ID should be Numeric It can not be Empty!");

            }
            
       else
            {
        
        
        
        
        int p=JOptionPane.showConfirmDialog(null,"Do you really want to Delete the Data?","Delete",JOptionPane.YES_NO_OPTION);
        if(p==0){
        
        String sql="delete from award_employee where empid=?";

        try{

            pst=con.prepareStatement(sql);
            pst.setString(1,empid.getText());
            pst.execute();
            JOptionPane.showMessageDialog(null,"Record Deleted Successfully!");

        }

        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);

        }

        update_table();
    }//GEN-LAST:event_deleteActionPerformed

    }
   }
    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed



        String val1=empid.getText();
        String val2=appyear.getText();
        String val3=curryear.getText();
        String val4=syears.getText();

        //Strating Validations.....

      


        String syearspat="^[0-9]{1,31}$";
        Pattern pat2=Pattern.compile(syearspat);
        Matcher regexMatcher2=pat2.matcher(val4);
        
        
        String appyearpat="^[0-9]{1,31}$";
        Pattern pat3=Pattern.compile(appyearpat);
        Matcher regexMatcher3=pat3.matcher(val2);
        
        
        String curryearpat="^[0-9]{1,31}$";
        Pattern pat4=Pattern.compile(curryearpat);
        Matcher regexMatcher4=pat4.matcher(val3);
        
        
            
            if(val1.isEmpty())
            {
                        JOptionPane.showMessageDialog(null,"Employee ID should be Numeric It can not be Empty!");

            }
            
       else
            {
        

        if(!regexMatcher3.matches()){

            JOptionPane.showMessageDialog(null,"Appointed Year should be Numeric!");

        }
        
         else if(!regexMatcher4.matches()){

            JOptionPane.showMessageDialog(null,"Current Year should be Numeric!");

        }
         
          else if(!regexMatcher2.matches()){

            JOptionPane.showMessageDialog(null,"No of Service Years should be Numeric!");

        }

        else {

            try
            {

                String sql="update award_employee set year='"+val3+"',no_Of_serviceYears='"+val4+"',appYear='"+val2+"' where empid='"+val1+"'";
                pst=con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null,"Record Updated Successfully!");

            }

            catch(Exception e)
            {

                JOptionPane.showMessageDialog(null,e);

            }

            update_table();
    }//GEN-LAST:event_updateActionPerformed
   }
 }
    private void award_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_award_tableMouseClicked

        try{
            int row=award_table.getSelectedRow();
            String Table_click=(award_table.getModel().getValueAt(row, 1).toString());

            String sql="select*from award_employee where empid='"+Table_click+"'";

            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();

            if(rs.next()){

                String add1=rs.getString("empid");
                empid.setText(add1);
                String add2=rs.getString("appYear");
                appyear.setText(add2);
                String add3=rs.getString("no_Of_serviceYears");
                syears.setText(add3);
                String add4=rs.getString("year");
                curryear.setText(add4);
 
            }
        }
        catch(Exception e){
            
                JOptionPane.showMessageDialog(null,e);

        }
    }//GEN-LAST:event_award_tableMouseClicked

    private void syearsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_syearsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_syearsActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

                try{
            
            String sql="select e.empId,e.empName, max(no_Of_serviceYears)from award_employee a,employee e where e.empId=a.empId and a.no_Of_serviceYears=(select max(a.no_Of_serviceYears)from award_employee a)";
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            
            if(rs.next())
            {
            String add1=rs.getString("max(no_Of_serviceYears)");
            maxi.setText(add1);
            
            String add2=rs.getString("e.empName");
            name.setText(add2);
            
            String add3=rs.getString("e.empId");
            id.setText(add3);
            }
        
        
        
        
        
        }
        
        catch(Exception e){
        
                        JOptionPane.showMessageDialog(null,e);
                        System.out.println(e);
        }
        
        
        
        
//        
//        try{
//            
//            String sql="select max(no_Of_serviceYears) from award_employee";
//            pst=con.prepareStatement(sql);
//            rs=pst.executeQuery();
//            
//            if(rs.next())
//            {
//            String add1=rs.getString("max(no_Of_serviceYears)");
//            maxi.setText(add1);
//            }
//        
//        
//        
//        
//        
//        }
//        
//        catch(Exception e){
//        
//                        JOptionPane.showMessageDialog(null,e);
//                        System.out.println(e);
//        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

    String toc = "";
    int summary = 0;
    
    try {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();


        String query = "Select empId,no_Of_serviceYears from award_employee ";

        pst = con.prepareStatement(query);
        rs = pst.executeQuery();
        while (rs.next()) 
        
        {
            toc = rs.getString("empId");
            summary = rs.getInt("no_Of_serviceYears");
            dataset.setValue(summary, toc, toc);
        }
        
        JFreeChart chart = ChartFactory.createBarChart("Bar Chart to find Number of Service Years", "empId", "no_Of_serviceYears", dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot p = chart.getCategoryPlot();

         p.setRangeGridlinePaint(Color.BLUE);

        ChartFrame panel = new ChartFrame("Bar Chart ",chart);
        panel.setVisible(true);
        panel.setSize(400, 400);
      // display_graph.add(panel);
        
        System.out.println("hhhhhhhh");

    } 
      

   
        catch(Exception e)
        {
         JOptionPane.showMessageDialog(null,e);
         System.out.println(e);
            
        }
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

    String toc = "";
    int summary = 0;
    
    try {
        DefaultPieDataset dataset = new DefaultPieDataset();


        String query = "Select empId,no_Of_serviceYears from award_employee ";

        pst = con.prepareStatement(query);
        rs = pst.executeQuery();
        while (rs.next()) 
        
        {           
            dataset.setValue(rs.getString("empId"),Double.parseDouble(rs.getString("no_Of_serviceYears")));
        }
        
        JFreeChart chart = ChartFactory.createPieChart("Pie Chart to find Number of Service Years", dataset, true, true, true);
        PiePlot p = (PiePlot)chart.getPlot();

   //      p.setForegroundAlpha(TOP_ALIGNMENT);

        ChartFrame panel = new ChartFrame("Pie Chart",chart);
        panel.setVisible(true);
        panel.setSize(400, 400);
      // display_graph.add(panel);
        
        System.out.println("hhhhhhhh");

    } 
      

   
        catch(Exception e)
        {
         JOptionPane.showMessageDialog(null,e);
         System.out.println(e);
            
        }
        

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        //        try
        //        {
            //        String report="C:\\Users\\Nilfa.RS\\JaspersoftWorkspace\\MyReports\\ReportEmployeeInfo.jrxml";
            //        JasperReport jr=JasperCompileManager.compileReport(report);
            //        JasperPrint jp=JasperFillManager.fillReport(jr,null,con);
            //        JasperViewer.viewReport(jp);
            //
            //
            //
            //        }
        //
        //        catch(Exception e)
        //        {
            //
            //               JOptionPane.showMessageDialog(null,e);
            //
            //
            //        }

            
            
            
            
              try {
            DBConnection db = new DBConnection();
            Connection con = db.connect();
            
            InputStream in = new FileInputStream(new File("C:\\Users\\Nilfa.RS\\Desktop\\TEchNinjas_project\\TEchNinjas_project\\Project_distributers\\Project_distributers\\src\\jasper\\serviceyrs.jrxml"));
            JasperDesign jd = JRXmlLoader.load(in);
            String sql = "select * from award_employee";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            HashMap para = new HashMap();
            JasperPrint j = JasperFillManager.fillReport(jr, para,con);
            JasperViewer.viewReport(j,false);
            //OutputStream os = new FileOutputStream(new File("E:\\Report"));
            //JasperExportManager.exportReportToPdfStream(j,os);
        } catch (Exception e) {
        
            e.printStackTrace();
        }
        

    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewAwardList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewAwardList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewAwardList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewAwardList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new viewAwardList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField appyear;
    private javax.swing.JTable award_table;
    private javax.swing.JTextField curryear;
    private javax.swing.JButton delete;
    private javax.swing.JLabel empid;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel maxi;
    private javax.swing.JLabel name;
    private javax.swing.JTextField syears;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
